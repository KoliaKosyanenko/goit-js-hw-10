{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst [daysValue, hoursValue, minutesValue, secondsValue] =\n  document.querySelectorAll('.value');\n\nlet userSelectedDate;\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const now = new Date();\n    startButton.disabled = userSelectedDate < now;\n    if (!startButton.disabled) return;\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n  },\n});\n\nlet timer = null;\n\nfunction startCountdown() {\n  const endDate = new Date(userSelectedDate).getTime();\n  const now = new Date().getTime();\n  const distance = endDate - now;\n  if (distance <= 0) {\n    clearInterval(timer);\n    [daysValue, hoursValue, minutesValue, secondsValue].forEach(\n      value => (value.textContent = '00')\n    );\n    startButton.disabled = false;\n    datetimePicker.disabled = false;\n    return;\n  }\n\n  const [days, hours, minutes, seconds] = [\n    Math.floor(distance / (1000 * 60 * 60 * 24)),\n    Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\n    Math.floor((distance % (1000 * 60)) / 1000),\n  ];\n\n  [daysValue, hoursValue, minutesValue, secondsValue].forEach(\n    (value, index) => {\n      const timeValue = [days, hours, minutes, seconds][index];\n      value.textContent = timeValue < 10 ? '0' + timeValue : timeValue;\n    }\n  );\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n  const endDate = new Date(userSelectedDate).getTime();\n  const now = new Date().getTime();\n  if (endDate <= now) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n    startButton.disabled = false;\n    datetimePicker.disabled = false;\n    return;\n  }\n\n  startCountdown();\n  timer = setInterval(startCountdown, 1000);\n});\n"],"names":["datetimePicker","startButton","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","flatpickr","selectedDates","now","iziToast","timer","startCountdown","endDate","distance","value","days","hours","minutes","seconds","index","timeValue"],"mappings":"+IAKA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnD,CAACC,EAAWC,EAAYC,EAAcC,CAAY,EACtD,SAAS,iBAAiB,QAAQ,EAEpC,IAAIC,EAEJC,EAAUP,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClC,MAAMC,EAAM,IAAI,KAChBR,EAAY,SAAWK,EAAmBG,EACrCR,EAAY,UACjBS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,CACF,CACH,CAAC,EAED,IAAIC,EAAQ,KAEZ,SAASC,GAAiB,CACxB,MAAMC,EAAU,IAAI,KAAKP,CAAgB,EAAE,QAAO,EAC5CG,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBK,EAAWD,EAAUJ,EAC3B,GAAIK,GAAY,EAAG,CACjB,cAAcH,CAAK,EACnB,CAACT,EAAWC,EAAYC,EAAcC,CAAY,EAAE,QAClDU,GAAUA,EAAM,YAAc,IACpC,EACId,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1B,MACD,CAED,KAAM,CAACgB,EAAMC,EAAOC,EAASC,CAAO,EAAI,CACtC,KAAK,MAAML,GAAY,IAAO,GAAK,GAAK,GAAG,EAC3C,KAAK,MAAOA,GAAY,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,EAChE,KAAK,MAAOA,GAAY,IAAO,GAAK,KAAQ,IAAO,GAAG,EACtD,KAAK,MAAOA,GAAY,IAAO,IAAO,GAAI,CAC9C,EAEE,CAACZ,EAAWC,EAAYC,EAAcC,CAAY,EAAE,QAClD,CAACU,EAAOK,IAAU,CAChB,MAAMC,EAAY,CAACL,EAAMC,EAAOC,EAASC,CAAO,EAAEC,CAAK,EACvDL,EAAM,YAAcM,EAAY,GAAK,IAAMA,EAAYA,CACxD,CACL,CACA,CAEApB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1B,MAAMa,EAAU,IAAI,KAAKP,CAAgB,EAAE,QAAO,EAC5CG,EAAM,IAAI,KAAM,EAAC,QAAO,EAC9B,GAAII,GAAWJ,EAAK,CAClBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EACDT,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1B,MACD,CAEDY,IACAD,EAAQ,YAAYC,EAAgB,GAAI,CAC1C,CAAC"}